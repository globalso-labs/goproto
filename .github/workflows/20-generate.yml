# based on https://github.com/mvdan/github-actions-golang
name: Generate

on:
  # Scan changed files in PRs, block on new issues only (existing issues ignored)
  pull_request: {}

  # Scan all files on branches, block on any issues
  push:
    branches: ["main"]

#   Schedule this job to run at a certain time, using cron syntax
#   Note that * is a special character in YAML so you have to quote this string
#  schedule:
#    - cron: '*/60 * * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  generate:
    if: (github.actor != 'github-actions[bot]')
    permissions:
      contents: write
      pull-requests: write
    strategy:
      matrix:
        go-version: [1.21.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      # cache go modules
      - uses: actions/cache@v3
        with:
          # In order:
          # * Module download cache
          # * Build cache (Linux)
          # * Build cache (Mac)
          # * Build cache (Windows)
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            %LocalAppData%\go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Update submodules
        run: git submodule update --init --recursive --remote

      - name: Lint proto files
        run: make protolint

      - name: Generate proto files
        run: make proto

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: "ci: build proto files using  for go"
          title: "CI: build proto files using for go"
          body: "CI: build proto files using ${{ github.sha }} for go."
